{"version":3,"sources":["components/Weather.js","components/Input.js","App.js","index.js"],"names":["Weather","weather","setWeather","useState","tempFahrenheit","setTempUnit","setTempUnitFunc","isFahrenheit","f","Math","round","convertToCelcius","main","className","name","sys","country","day","moment","format","date","getDate","temp","onClick","class","humidity","pressure","wind","speed","temp_min","temp_max","style","textTransform","description","src","icon","Input","location","setLocation","onSubmit","setOnSubmit","apiKey","type","placeholder","onChange","e","target","value","preventDefault","fetch","then","res","json","data","App","ReactDOM","render","document","getElementById"],"mappings":"gNAkGeA,MA/Ff,cAAyC,IAAvBC,EAAsB,EAAtBA,QACd,GADoC,EAAZC,WACaC,oBAAS,IAA9C,mBAAOC,EAAP,KAAsBC,EAAtB,KAEMC,EAAkB,WACpBD,GAAaD,IAOTG,EAAe,SAACC,GAGpB,OADcJ,EAAe,GAAD,OAAKK,KAAKC,MAAMF,GAAhB,mBANL,SAACA,GAExB,OADcC,KAAKC,MAAkB,EAAE,GAAbF,EAAI,KAK0BG,CAAiBH,GAA7C,UAahC,OAEA,8BACuB,oBAAdP,EAAQW,KACb,gCACA,sBAAKC,UAAU,eAAf,UACI,sBAAKA,UAAU,WAAf,UACCZ,EAAQa,KADT,IACgBb,EAAQc,IAAIC,WAG3B,qBAAKH,UAAU,OAAf,SApBS,WAId,IAAII,EAAMC,MAASC,OAAO,QACtBC,EAAOF,MAASC,OAAO,MAE3B,MADe,UAAMF,EAAN,YAAaG,GAcCC,QAG7B,sBAAKR,UAAU,cAAf,UACI,sBAAKA,UAAU,cAAf,UAEHN,EAAaN,EAAQW,KAAKU,MAInB,qBAAKT,UAAU,cAAf,SACET,EACA,wBAAQmB,QAASjB,EAAjB,mBADe,wBAAQiB,QAASjB,EAAjB,wBAKrB,sBAAKO,UAAU,aAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,qBAAKW,MAAM,aAAX,sBACA,gCAAMvB,EAAQW,KAAKa,SAAnB,UAEJ,sBAAKZ,UAAU,gBAAf,UACI,qBAAKW,MAAM,aAAX,sBACA,gCAAMvB,EAAQW,KAAKc,SAAnB,aAEJ,sBAAKb,UAAU,iBAAf,UACI,qBAAKW,MAAM,aAAX,wBACA,gCAAMvB,EAAQ0B,KAAKC,MAAnB,aAEJ,sBAAKf,UAAU,eAAf,UACI,qBAAKW,MAAM,aAAX,sBACA,8BAAMjB,EAAaN,EAAQW,KAAKiB,eAEpC,sBAAKhB,UAAU,eAAf,UACI,qBAAKW,MAAM,aAAX,sBACA,8BAAMjB,EAAaN,EAAQW,KAAKkB,eAEpC,sBAAKjB,UAAU,WAAf,UACI,qBAAKW,MAAM,aAAaO,MAAO,CAACC,cAAc,cAA9C,SAA8D/B,EAAQA,QAAQ,GAAGgC,cACjF,qBAAKT,MAAM,UAAX,SAAqB,qBAAKU,IAAG,2CAAsCjC,EAAQA,QAAQ,GAAGkC,KAAzD,2BASrC,oBAAItB,UAAU,mBAAd,wCClCGuB,MAlDf,WACI,MAA+BjC,mBAAS,IAAxC,mBAAOkC,EAAP,KAAgBC,EAAhB,KACA,EAA8BnC,mBAAS,IAAvC,mBAAOF,EAAP,KAAeC,EAAf,KACA,EAA+BC,oBAAS,GAAxC,mBAAOoC,EAAP,KAAgBC,EAAhB,KAiBQC,EAAS,mCAEjB,OACI,gCAEE,sBAAK5B,UAAU,aAAf,UACE,oBAAIW,MAAM,QAAV,8BACA,qBAAKA,MAAM,WAAX,SACA,uBAAMA,MAAM,OAAZ,UACI,uBACAkB,KAAK,OACL7B,UAAU,aACV8B,YAAY,qBACZC,SAAU,SAAAC,GAAC,OAAEP,EAAYO,EAAEC,OAAOC,QAClCA,MAAOV,IAEP,wBAAQd,QA/BG,SAACsB,GACpBL,GAAY,GACZK,EAAEG,iBAEAC,MAAM,qDAAD,OAAsDZ,EAAtD,iCAAuFI,IACzFS,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACJnD,EAAWmD,GACXf,EAAY,QAuBuBzB,UAAU,gBAA3C,4BAIP0B,GAAU,cAAC,EAAD,CACPtC,QAASA,EACTC,WAAYA,QC1BToD,MAhBf,WAGE,OAEE,qBAAKzC,UAAU,oBAAf,SACI,cAAC,EAAD,OCJR0C,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c37a7d29.chunk.js","sourcesContent":["import React,{useState} from 'react'\nimport moment from 'moment'\n\nfunction Weather({weather},{setWeather}){\n    const [tempFahrenheit,setTempUnit] = useState(true)\n\n    const setTempUnitFunc = () => {\n        setTempUnit(!tempFahrenheit)\n      }\n    \n      const convertToCelcius = (f) => {\n        let celcius = Math.round((f - 32) * (5/9))\n        return celcius\n      }\n      const isFahrenheit = (f) => {\n        let currentTemp\n        currentTemp = tempFahrenheit? `${Math.round(f)}째F` : `${convertToCelcius(f)}째C`\n        return currentTemp\n      }\n      const getDate = () => { \n    \n\n    \n        let day = moment().format('dddd')\n        let date = moment().format('LL')\n        let currentDate = `${day} ${date}` \n        return currentDate\n      }\n\n    return(\n    \n    <div>\n    {(typeof weather.main!='undefined')?(\n        <div>\n        <div className=\"location-div\">\n            <div className=\"location\">\n            {weather.name} {weather.sys.country}\n            </div>\n      \n             <div className=\"date\" >{getDate()}</div>\n        </div>\n\n        <div className=\"weather-div\">\n            <div className=\"temperature\">\n\n        {isFahrenheit(weather.main.temp)}\n        \n        \n            \n                <div className=\"temp-switch\">\n                {!tempFahrenheit?<button onClick={setTempUnitFunc}>째F</button>\n                : <button onClick={setTempUnitFunc}>째C</button>}\n                \n                </div>\n            </div>\n            <div className=\"temp-stats\">\n                <div className=\"temp-humidity\">\n                    <div class=\"temp-title\">HUMIDITY</div>\n                    <div>{weather.main.humidity}%</div>\n                </div>\n                <div className=\"temp-pressure\">\n                    <div class=\"temp-title\">PRESSURE</div>\n                    <div>{weather.main.pressure} hPa</div>\n                </div>\n                <div className=\"temp-windspeed\">\n                    <div class=\"temp-title\">WIND SPEED</div>\n                    <div>{weather.wind.speed} m/s</div>\n                </div>\n                <div className=\"temp-mintemp\">\n                    <div class=\"temp-title\">MIN TEMP</div>\n                    <div>{isFahrenheit(weather.main.temp_min)}</div>\n                </div>\n                <div className=\"temp-maxtemp\">\n                    <div class=\"temp-title\">MAX TEMP</div>\n                    <div>{isFahrenheit(weather.main.temp_max)}</div>\n                </div>\n                <div className=\"temp-img\">\n                    <div class=\"temp-title\" style={{textTransform:'capitalize'}}>{weather.weather[0].description}</div>\n                    <div class=\"img-div\"><img src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}></img></div>\n                </div>\n                \n            </div>\n            \n        </div>\n       \n      </div>\n        ):(\n            <h1 className=\"cannotFindHeader\">\n                Cannot find location...\n            </h1>)}\n        </div>\n        \n    \n    \n    )\n\n}\n\nexport default Weather","import React,{useState} from 'react'\nimport Weather from './Weather'\n\nfunction Input(){\n    const [location,setLocation] = useState('')\n    const [weather,setWeather]  = useState({})\n    const [onSubmit,setOnSubmit] = useState(false)\n\n    const searchLocation = (e) =>{\n        setOnSubmit(true)\n        e.preventDefault()\n        \n          fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&units=imperial&appid=${apiKey}`)\n            .then(res=>res.json())\n            .then(data=>{\n              setWeather(data)\n              setLocation('')\n              \n            })\n        \n        \n      }\n    \n      const apiKey = '0a330a454a1ad0ff544079653191e957'\n    \n    return(\n        <div>\n\n          <div className=\"search-div\"> \n            <h1 class=\"title\">Weather Forecast</h1>\n            <div class=\"form-div\">\n            <form class=\"form\">\n                <input\n                type=\"text\"\n                className=\"search-bar\"\n                placeholder=\"Search for City...\"\n                onChange={e=>setLocation(e.target.value)}\n                value={location}\n                />\n                <button onClick={searchLocation} className=\"search-button\">SEARCH</button>\n        </form>\n            </div>\n        </div> \n        {onSubmit&&<Weather\n            weather={weather}\n            setWeather={setWeather}\n        />}\n        \n        </div>\n       \n    )\n}\n\nexport default Input","import Input from './components/Input'\nimport React from 'react'\n\nfunction App() {\n\n\n  return (\n    \n    <div className=\"weather-container\">\n        <Input/>\n      </div>\n\n      \n    \n    \n     \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}